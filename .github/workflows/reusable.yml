# # reusable workflow to install NPM dependencies
# # and run Cypress tests across N machines in using cypress-split
# # https://github.com/bahmutov/cypress-split
# name: split
# on:
#   workflow_call:
#     inputs:
#       n:
#         description: "Number of parallel containers"
#         type: number
#         required: true
#         default: 1
#       # standard parameters
#       config:
#         description: "Set configuration values. Separate multiple values with a comma. The values set here override any values set in your configuration file."
#         type: string
#         required: false
#       config-file:
#         description: "Path to a JSON file where configuration values are set."
#         type: string
#         required: false
#       env:
#         description: "Sets Cypress environment variables"
#         type: string
#         required: false
#       browser:
#         description: "Name of the browser to use"
#         type: string
#         required: false
#       command:
#         description: "Command that overrides cypress run"
#         type: string
#         required: false
#       start:
#         description: "Command for starting local server in the background"
#         type: string
#         required: false
#       start-windows:
#         description: "A different start command on Windows"
#         type: string
#         required: false
#       build:
#         description: "Command to run in build step before starting tests"
#         type: string
#         required: false
#       install:
#         description: "Whether or not to run install"
#         type: boolean
#         required: false
#         default: true
#       install-command:
#         description: "Custom install command to use"
#         type: string
#         required: false
#       runTests:
#         description: "Whether or not to run tests"
#         type: boolean
#         required: false
#         default: true
#       wait-on:
#         description: "Local server URL to wait for"
#         type: string
#         required: false
#       wait-on-timeout:
#         description: "Amount of time to wait for wait-on url to be available"
#         type: number
#         required: false
#         # default is 60 seconds
#         default: 60
#       working-directory:
#         description: "Working directory containing Cypress folder"
#         type: string
#         required: false
#       headed:
#         description: "Whether or not to use headed mode"
#         type: boolean
#         required: false
#       spec:
#         description: "Provide a specific specs to run"
#         type: string
#         required: false
#       project:
#         description: "Path of project to run"
#         type: string
#         required: false
#       command-prefix:
#         description: "You can prefix the default test command using the command-prefix option."
#         type: string
#         required: false
#       cache-key:
#         description: "Custom cache key"
#         type: string
#         required: false
#       quiet:
#         description: "Whether or not to silence any Cypress specific output from stdout"
#         type: boolean
#         required: false
#         default: false
#       debug-inputs:
#         description: "Print the workflow inputs"
#         type: boolean
#         required: false
#         default: false
#       debug:
#         description: "Set the environment variable DEBUG"
#         type: string
#         required: false
#         default: ""
#       store-artifacts:
#         description: "Store screenshots and videos from the cypress folder"
#         type: boolean
#         required: false
#         default: true
#       marge:
#         description: |
#           Download the Mochawesome results from all tests jobs
#           and merge into a single report
#         type: boolean
#         required: false
#         default: false
#       slack:
#         description: "Test runs status & upload failed test screenshots to the channel"
#         type: boolean
#         required: false
#         default: false

#     # secrets:
#     #   CYPRESS_username:
#     #     required: true
#     #   CYPRESS_password:
#     #     required: true
#     #   PERCY_TOKEN:
#     #     required: true

# jobs:
#   prepare:
#     runs-on: macos-latest
#     # explicitly set the output of this job
#     # so that other jobs can use it
#     outputs:
#       matrix: ${{ steps.prepare.outputs.matrix }}
#     steps:
#       # generate the list using a bash script
#       - name: Create container matrix ‚äπ
#         id: prepare
#         # for reusable workflow, must use the full action reference
#         uses: bahmutov/gh-build-matrix@main
#         with:
#           n: ${{ inputs.n }} # number of containers to output
#       - name: Print result üñ®
#         run: echo '${{ steps.prepare.outputs.matrix }}'

#   # the N parallel testing jobs we create
#   tests:
#     needs: prepare
#     runs-on: macos-latest
#     # env:
#     #   CYPRESS_username: ${{secrets.CYPRESS_USERNAME}}
#     #   CYPRESS_password: ${{ secrets.CYPRESS_PASSWORD }}
#     #   PERCY_TOKEN: ${{secrets.PERCY_TOKEN}}
#     strategy:
#       fail-fast: false
#       matrix: ${{ fromJSON(needs.prepare.outputs.matrix) }}
#     steps:
#       - name: Debug inputs üêû
#         if: ${{ inputs.debug-inputs }}
#         env:
#           WORKFLOW_INPUTS: ${{ toJson(inputs) }}
#         run: echo "$WORKFLOW_INPUTS"
#       - name: Checkout üõé
#         uses: actions/checkout@v3
#       # these containers will load balance all found tests among themselves
#       - name: Cypress tests üß™
#         uses: cypress-io/github-action@v5
#         # pass the machine index and the total number
#         # https://github.com/bahmutov/cypress-split
#         env:
#           SPLIT: ${{ strategy.job-total }}
#           SPLIT_INDEX:
#             ${{ strategy.job-index }}
#             # pass the custom list of specs if needed
#           SPEC: "${{ inputs.spec }}"
#           # pass the DEBUG environment variable
#           DEBUG: ${{ inputs.debug }}
#         # pass the rest of the commands via Cypress GH Action
#         with:
#           config: ${{ inputs.config }}
#           config-file: ${{ inputs.config-file }}
#           # Cypress.env values
#           env: "${{ inputs.env }}"
#           browser: ${{ inputs.browser }}
#           command: ${{ inputs.command }}
#           start: ${{ inputs.start }}
#           start-windows: ${{ inputs.start-windows }}
#           install: ${{ inputs.install }}
#           install-command: ${{ inputs.install-command }}
#           runTests: ${{ inputs.runTests }}
#           wait-on: ${{ inputs.wait-on }}
#           wait-on-timeout: ${{ inputs.wait-on-timeout }}
#           working-directory: ${{ inputs.working-directory }}
#           headed: ${{ inputs.headed }}
#           spec: ${{ inputs.spec }}
#           project: ${{ inputs.project }}
#           command-prefix: ${{ inputs.command-prefix }}
#           cache-key: ${{ inputs.cache-key }}
#           quiet: ${{ inputs.quiet }}
#       # capture screenshots, videos, Mochawesome reports
#       # in a single test artifact so that relative paths work
#       # capture screenshots, videos, Mochawesome reports
#       # https://github.com/actions/upload-artifact
#       - uses: actions/upload-artifact@v4
#         if: ${{ inputs.store-artifacts && always() }}
#         with:
#           name: cypress-split-results-${{ strategy.job-index }}
#           path: |
#             ${{ inputs.working-directory }}/cypress/screenshots
#             ${{ inputs.working-directory }}/cypress/videos
#             ${{ inputs.working-directory }}/cypress/results
#           if-no-files-found: ignore

#   report:
#     if: ${{ inputs.store-artifacts && inputs.marge && always() }}
#     needs: tests
#     runs-on: macos-latest

#     steps:
#       - name: Checkout üõé
#         uses: actions/checkout@v3
#       - name: Install dependencies üß™
#         uses: cypress-io/github-action@v5
#         with:
#           runTests: false
#           working-directory: ${{ inputs.working-directory }}
#       # https://github.com/actions/download-artifact
#       - uses: actions/download-artifact@v4
#         # download all test results artifacts from the previous jobs
#         # it would be nice to download only the split jobs test artifacts
#         # but cannot specify the pattern of the test artifacts yet
#         # https://github.com/actions/download-artifact/issues/103
#         with:
#           path: ${{ inputs.working-directory }}/split-results
#       - name: Display structure of downloaded files
#         run: |
#
#           ls -R split-results

#       - name: Prepare folder
#         run: |
#
#           mkdir mochawesome
#           mkdir -p mochawesome/screenshots
#           mkdir -p mochawesome/videos
#           mkdir -p mochawesome/results
#           mkdir -p mochawesome/html-reports

#       - name: Copy all assets and JSON reports
#         run: |
#
#           cp -r split-results/cypress-split-results-*/screenshots/* mochawesome/screenshots || true
#           cp -r split-results/cypress-split-results-*/videos/* mochawesome/videos || true
#           cp -r split-results/cypress-split-results-*/results/* mochawesome/results || true

#       - name: Show coped files
#         run: |
#
#           ls -lR mochawesome

#       - name: Merge Mochawesome JSON reports
#         # assuming the merge tool is installed
#         run: |
#
#           npx mochawesome-merge mochawesome/results/*.json -o mochawesome/html-reports/merged.json

#       - name: Generate Mochawesome HTML report
#         # assuming the merge tool is installed
#         run: |
#
#           npx marge mochawesome/html-reports/merged.json \
#             --charts true --showHooks always \
#             --reportDir mochawesome/html-reports \
#             --reportFilename index.html

#       - uses: actions/upload-artifact@v4
#         with:
#           name: merged-mochawesome-report
#           path: ${{ inputs.working-directory }}/mochawesome

# name: split

# on:
#   workflow_call:
#     inputs:
#       n:
#         description: "Number of parallel containers"
#         type: number
#         required: true
#         default: 1

#       prefix:
#         description: "Optional command prefix like 'percy exec --'"
#         type: string
#         required: false

#       config-file:
#         description: "Cypress config file path (e.g., cypress.acph.config.js)"
#         type: string
#         required: false

#       config:
#         type: string
#         required: false
#       env:
#         type: string
#         required: false
#       browser:
#         type: string
#         required: false
#       command:
#         type: string
#         required: false
#       start:
#         type: string
#         required: false
#       start-windows:
#         type: string
#         required: false
#       build:
#         type: string
#         required: false
#       install:
#         type: boolean
#         required: false
#         default: true
#       install-command:
#         type: string
#         required: false
#       runTests:
#         type: boolean
#         required: false
#         default: true
#       wait-on:
#         type: string
#         required: false
#       wait-on-timeout:
#         type: number
#         required: false
#         default: 60
#       working-directory:
#         type: string
#         required: false
#       headed:
#         type: boolean
#         required: false
#       spec:
#         type: string
#         required: false
#       project:
#         type: string
#         required: false
#       command-prefix:
#         type: string
#         required: false
#       cache-key:
#         type: string
#         required: false
#       quiet:
#         type: boolean
#         required: false
#         default: false
#       debug-inputs:
#         type: boolean
#         required: false
#         default: false
#       debug:
#         type: string
#         required: false
#         default: ""
#       store-artifacts:
#         type: boolean
#         required: false
#         default: true
#       marge:
#         type: boolean
#         required: false
#         default: false
#       slack:
#         type: boolean
#         required: false
#         default: false

# jobs:
#   prepare:
#     runs-on: macos-latest
#     outputs:
#       matrix: ${{ steps.prepare.outputs.matrix }}
#     steps:
#       - name: Create container matrix ‚äπ
#         id: prepare
#         uses: bahmutov/gh-build-matrix@main
#         with:
#           n: ${{ inputs.n }}
#       - name: Print matrix üñ®
#         run: echo '${{ steps.prepare.outputs.matrix }}'

#   tests:
#     needs: prepare
#     runs-on: macos-latest
#     strategy:
#       fail-fast: false
#       matrix: ${{ fromJSON(needs.prepare.outputs.matrix) }}
#     steps:
#       - name: Debug inputs üêû
#         if: ${{ inputs.debug-inputs }}
#         env:
#           WORKFLOW_INPUTS: ${{ toJson(inputs) }}
#         run: echo "$WORKFLOW_INPUTS"

#       - name: Checkout üõé
#         uses: actions/checkout@v4

#       - name: Run Cypress tests üß™
#         uses: cypress-io/github-action@v5
#         env:
#           SPLIT: ${{ strategy.job-total }}
#           SPLIT_INDEX: ${{ strategy.job-index }}
#           DEBUG: ${{ inputs.debug }}
#         with:
#           command: ${{ inputs.command || format('{0}cypress run{1}{2}{3}{4}{5}{6}{7}',
#             inputs.prefix,
#             inputs.spec && format(' --spec \"{0}\"', inputs.spec) || '',
#             inputs.browser && format(' --browser \"{0}\"', inputs.browser) || '',
#             inputs.env && format(' --env \"{0}\"', inputs.env) || '',
#             inputs.config-file && format(' --config-file {0}', inputs.config-file) || '',
#             inputs.headed && ' --headed' || '',
#             inputs.project && format(' --project {0}', inputs.project) || '',
#             inputs.working-directory && format(' --config {0}', inputs.working-directory) || ''
#            ) }}
#           config: ${{ inputs.config }}
#           config-file: ${{ inputs.config-file }}
#           env: ${{ inputs.env }}
#           browser: ${{ inputs.browser }}
#           start: ${{ inputs.start }}
#           start-windows: ${{ inputs.start-windows }}
#           install: ${{ inputs.install }}
#           install-command: ${{ inputs.install-command }}
#           runTests: ${{ inputs.runTests }}
#           wait-on: ${{ inputs.wait-on }}
#           wait-on-timeout: ${{ inputs.wait-on-timeout }}
#           working-directory: ${{ inputs.working-directory }}
#           headed: ${{ inputs.headed }}
#           spec: ${{ inputs.spec }}
#           project: ${{ inputs.project }}
#           command-prefix: ${{ inputs.command-prefix }}
#           cache-key: ${{ inputs.cache-key }}
#           quiet: ${{ inputs.quiet }}

#       - uses: actions/upload-artifact@v4
#         if: ${{ inputs.store-artifacts && always() }}
#         with:
#           name: cypress-split-results-${{ strategy.job-index }}
#           path: |
#             ${{ inputs.working-directory }}/cypress/screenshots
#             ${{ inputs.working-directory }}/cypress/videos
#             ${{ inputs.working-directory }}/cypress/results
#           if-no-files-found: ignore

#   report:
#     if: ${{ inputs.store-artifacts && inputs.marge && always() }}
#     needs: tests
#     runs-on: macos-latest
#     steps:
#       - name: Checkout üõé
#         uses: actions/checkout@v4

#       - name: Install dependencies üß™
#         uses: cypress-io/github-action@v5
#         with:
#           runTests: false
#           working-directory: ${{ inputs.working-directory }}

#       - uses: actions/download-artifact@v4
#         with:
#           path: ${{ inputs.working-directory }}/split-results

#       - name: Display downloaded structure
#         run: |
#
#           ls -R split-results

#       - name: Prepare report folders
#         run: |
#
#           mkdir -p mochawesome/screenshots
#           mkdir -p mochawesome/videos
#           mkdir -p mochawesome/results
#           mkdir -p mochawesome/html-reports

#       - name: Copy test assets
#         run: |
#
#           cp -r split-results/cypress-split-results-*/screenshots/* mochawesome/screenshots || true
#           cp -r split-results/cypress-split-results-*/videos/* mochawesome/videos || true
#           cp -r split-results/cypress-split-results-*/results/* mochawesome/results || true

#       - name: Merge Mochawesome JSON
#         run: |
#
#           npx mochawesome-merge mochawesome/results/*.json -o mochawesome/html-reports/merged.json

#       - name: Generate HTML report
#         run: |
#
#           npx marge mochawesome/html-reports/merged.json \
#             --charts true --showHooks always \
#             --reportDir mochawesome/html-reports \
#             --reportFilename index.html

#       - uses: actions/upload-artifact@v4
#         with:
#           name: merged-mochawesome-report
#           path: ${{ inputs.working-directory }}/mochawesome

# reusable workflow to install NPM dependencies
# and run Cypress tests across N machines in using cypress-split
# https://github.com/bahmutov/cypress-split

name: split
on:
  workflow_call:
    inputs:
      n:
        description: "Number of parallel containers"
        type: number
        required: true
        default: 1
      # standard parameters
      config:
        description: "Set configuration values. Separate multiple values with a comma. The values set here override any values set in your configuration file."
        type: string
        required: false
      config-file:
        description: "Path to a JSON file where configuration values are set."
        type: string
        required: false
      env:
        description: "Sets Cypress environment variables"
        type: string
        required: false
      browser:
        description: "Name of the browser to use"
        type: string
        required: false
      command:
        description: "Command that overrides cypress run"
        type: string
        required: false
      start:
        description: "Command for starting local server in the background"
        type: string
        required: false
      start-windows:
        description: "A different start command on Windows"
        type: string
        required: false
      build:
        description: "Command to run in build step before starting tests"
        type: string
        required: false
      install:
        description: "Whether or not to run install"
        type: boolean
        required: false
        default: true
      install-command:
        description: "Custom install command to use"
        type: string
        required: false
      runTests:
        description: "Whether or not to run tests"
        type: boolean
        required: false
        default: true
      wait-on:
        description: "Local server URL to wait for"
        type: string
        required: false
      wait-on-timeout:
        description: "Amount of time to wait for wait-on url to be available"
        type: number
        required: false
        # default is 60 seconds
        default: 60
      working-directory:
        description: "Working directory containing Cypress folder"
        type: string
        required: false
      headed:
        description: "Whether or not to use headed mode"
        type: boolean
        required: false
      spec:
        description: "Provide a specific specs to run"
        type: string
        required: false
      project:
        description: "Path of project to run"
        type: string
        required: false
      command-prefix:
        description: "You can prefix the default test command using the command-prefix option."
        type: string
        required: false
      cache-key:
        description: "Custom cache key"
        type: string
        required: false
      quiet:
        description: "Whether or not to silence any Cypress specific output from stdout"
        type: boolean
        required: false
        default: false
      debug-inputs:
        description: "Print the workflow inputs"
        type: boolean
        required: false
        default: false
      debug:
        description: "Set the environment variable DEBUG"
        type: string
        required: false
        default: ""
      store-artifacts:
        description: "Store screenshots and videos from the cypress folder"
        type: boolean
        required: false
        default: true
      marge:
        description: |
          Download the Mochawesome results from all tests jobs
          and merge into a single report
        type: boolean
        required: false
        default: false
      slack:
        description: "Test runs status & upload failed test screenshots to the channel"
        type: boolean
        required: false
        default: false

    secrets:
      CYPRESS_username:
        required: true
      CYPRESS_password:
        required: true
      PERCY_TOKEN:
        required: true

jobs:
  prepare:
    runs-on: ubuntu-latest
    # explicitly set the output of this job
    # so that other jobs can use it
    outputs:
      matrix: ${{ steps.prepare.outputs.matrix }}
    steps:
      # generate the list using a bash script
      - name: Create container matrix ‚äπ
        id: prepare
        # for reusable workflow, must use the full action reference
        uses: bahmutov/gh-build-matrix@main
        with:
          n: ${{ inputs.n }} # number of containers to output
      - name: Print result üñ®
        run: echo '${{ steps.prepare.outputs.matrix }}'

  # the N parallel testing jobs we create
  tests:
    needs: prepare
    runs-on: macos-latest
    env:
      CYPRESS_username: ${{secrets.CYPRESS_USERNAME}}
      CYPRESS_password: ${{ secrets.CYPRESS_PASSWORD }}
      PERCY_TOKEN: ${{secrets.PERCY_TOKEN}}
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.prepare.outputs.matrix) }}
    steps:
      - name: Debug inputs üêû
        if: ${{ inputs.debug-inputs }}
        env:
          WORKFLOW_INPUTS: ${{ toJson(inputs) }}
        run: echo "$WORKFLOW_INPUTS"
      - name: Checkout üõé
        uses: actions/checkout@v3
      # these containers will load balance all found tests among themselves
      - name: Cypress tests üß™
        uses: cypress-io/github-action@v5
        # pass the machine index and the total number
        # https://github.com/bahmutov/cypress-split
        env:
          SPLIT: ${{ strategy.job-total }}
          SPLIT_INDEX:
            ${{ strategy.job-index }}
            # pass the custom list of specs if needed
          SPEC: "${{ inputs.spec }}"
          # pass the DEBUG environment variable
          DEBUG: ${{ inputs.debug }}
        # pass the rest of the commands via Cypress GH Action
        with:
          config: ${{ inputs.config }}
          config-file: ${{ inputs.config-file }}
          # Cypress.env values
          env: "${{ inputs.env }}"
          browser: ${{ inputs.browser }}
          command: ${{ inputs.command }}
          start: ${{ inputs.start }}
          start-windows: ${{ inputs.start-windows }}
          install: ${{ inputs.install }}
          install-command: ${{ inputs.install-command }}
          runTests: ${{ inputs.runTests }}
          wait-on: ${{ inputs.wait-on }}
          wait-on-timeout: ${{ inputs.wait-on-timeout }}
          working-directory: ${{ inputs.working-directory }}
          headed: ${{ inputs.headed }}
          spec: ${{ inputs.spec }}
          project: ${{ inputs.project }}
          command-prefix: ${{ inputs.command-prefix }}
          cache-key: ${{ inputs.cache-key }}
          quiet: ${{ inputs.quiet }}
      # capture screenshots, videos, Mochawesome reports
      # in a single test artifact so that relative paths work
      # capture screenshots, videos, Mochawesome reports
      # https://github.com/actions/upload-artifact
      - uses: actions/upload-artifact@v4
        if: ${{ inputs.store-artifacts && always() }}
        with:
          name: cypress-split-results-${{ strategy.job-index }}
          path: |
            ${{ inputs.working-directory }}/cypress/screenshots
            ${{ inputs.working-directory }}/cypress/videos
            ${{ inputs.working-directory }}/cypress/results
          if-no-files-found: ignore

  report:
    if: ${{ inputs.store-artifacts && inputs.marge && always() }}
    needs: tests
    runs-on: macos-latest

    steps:
      - name: Checkout üõé
        uses: actions/checkout@v3
      - name: Install dependencies üß™
        uses: cypress-io/github-action@v5
        with:
          runTests: false
          working-directory: ${{ inputs.working-directory }}
      # https://github.com/actions/download-artifact
      - uses: actions/download-artifact@v4
        # download all test results artifacts from the previous jobs
        # it would be nice to download only the split jobs test artifacts
        # but cannot specify the pattern of the test artifacts yet
        # https://github.com/actions/download-artifact/issues/103
        with:
          path: ${{ inputs.working-directory }}/split-results
      - name: Display structure of downloaded files
        run: |

          ls -R split-results

      - name: Prepare folder
        run: |

          mkdir mochawesome
          mkdir -p mochawesome/screenshots
          mkdir -p mochawesome/videos
          mkdir -p mochawesome/results
          mkdir -p mochawesome/html-reports

      - name: Copy all assets and JSON reports
        run: |

          cp -r split-results/cypress-split-results-*/screenshots/* mochawesome/screenshots || true
          cp -r split-results/cypress-split-results-*/videos/* mochawesome/videos || true
          cp -r split-results/cypress-split-results-*/results/* mochawesome/results || true

      - name: Show coped files
        run: |

          ls -lR mochawesome

      - name: Merge Mochawesome JSON reports
        # assuming the merge tool is installed
        run: |

          npx mochawesome-merge mochawesome/results/*.json -o mochawesome/html-reports/merged.json

      - name: Generate Mochawesome HTML report
        # assuming the merge tool is installed
        run: |

          npx marge mochawesome/html-reports/merged.json \
            --charts true --showHooks always \
            --reportDir mochawesome/html-reports \
            --reportFilename index.html

      - uses: actions/upload-artifact@v4
        with:
          name: merged-mochawesome-report
          path: ${{ inputs.working-directory }}/mochawesome
